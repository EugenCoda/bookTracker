extends layout

block content

  include helpers

  div.media
    img.align-self-start.mr-3(id='book_cover', src=`/images/books/${book._id}.jpg`, title=`${book.title}`, alt=`${book.title}`)

    div.media-body
      h3 #{book.title} 
      - if (book.language.id != book.originalLanguage.id)
        h6 (Original Title: #{book.originalTitle})
      
      hr

      div(style='margin-left:20px;margin-top:20px')
      
        if book.author2
          //- Excludes the default author from the list
          if book.author2._id=='5f181920c4d320322dbbf993'
            p #[strong by:] 
              a(href=book.author.url) #{book.author.name} 
          else
            p #[strong by:] 
              a(href=book.author.url) #{book.author.name} 
              |& 
              a(href=book.author2.url) #{book.author2.name}
        else
          p #[strong by:] 
              a(href=book.author.url) #{book.author.name} 

        p #[strong First Published:] #{book.yearFirstPublished}

        p #[strong ISBN:] #{book.isbn}
        
        p #[strong Genre:]&nbsp;
          each val, index in book.genre
            a(href=val.url) #{val.name}
            if index < book.genre.length - 1
              |, 
        
        p#shortText(style='display:inline') #[strong Summary:] #{truncate(book.summary, 500)}
        p#fullText(style='display:none') #[strong Summary:] #{book.summary} 
        |
        a#expandText(href='#' title=book.summary) ...more
        br
        br
        - if (book.language.id != book.originalLanguage.id)
          p #[strong Language:]       
            | 
            a(href=book.language.url) #{book.language.name}  
            |      
            p #[strong Original Language:] 
              |
              a(href=book.originalLanguage.url) #{book.originalLanguage.name}
        - else
          p #[strong Language:] 
            | 
            a(href=book.language.url) #{book.language.name}
        
        p #[strong Number of Pages:] #{book.pages}
        
        - let ratingCount = 0
        - let ratingSum = 0
        //- Loops through all reviews from all users to find the ones for this book.
        each val in userReview_all
          //- If found and if it has a rating, rating is counted and added to the total sum
          - if (val.book.equals(book._id))
            - if (val.rating)
              - ratingCount++
              - ratingSum=ratingSum+val.rating
          - else 
            return
        //- If rating count is zero, print N/A
        if ratingCount == 0
          p #[strong Average Rating:] N/A
        //- Else, print the average rating
        else
          p #[strong Average Rating:] #{(ratingSum/ratingCount).toFixed(2)} (#[strong No. of Ratings:] #{ratingCount})
        
        hr
        p #[strong User Reviews:]
        div(style='margin-left:20px')
          //- Loops again through all reviews from all users to find the ones for this book.
          each val in userReview_all
            - if (val.book.equals(book._id))
              //- if review is blank, it is not shown here
              - if (val.review!="")
                //- if the user is the same with the one who made the review
                if user
                  if (val.user._id==user.id)
                    p #[strong You] rated it with #[strong #{val.rating}] (#{moment(val.createdAt).format('MMM D, YYYY')}):
                    div(style='margin-left:20px')
                      p #{val.review}
                else
                  //- the reviews from other users are shown only if verified
                  if val.isVerified
                    p #[strong #{val.user.username}] rated it with #[strong #{val.rating}] (#{moment(val.createdAt).format('MMM D, YYYY')}):
                    div(style='margin-left:20px')
                      p #{val.review}

        hr
        if user
          if booklist == null
            p
              a(href=book.booklisturl+'/addtolist' title="Add Book to My List")
                svg.bi.bi-plus-circle-fill.text-success(viewBox='0 0 16 16', fill='currentColor', xmlns='http://www.w3.org/2000/svg')
                  path(fill-rule='evenodd', d='M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4a.5.5 0 0 0-1 0v3.5H4a.5.5 0 0 0 0 1h3.5V12a.5.5 0 0 0 1 0V8.5H12a.5.5 0 0 0 0-1H8.5V4z')
          else
            each val, index in booklist.personal_list
              - if (booklist.personal_list[index].book.equals(book._id))
                p #[strong My Status:] #{booklist.personal_list[index].status}  
                  a(href=book.booklisturl+'/view' title="View Book Entry") view
                  a(href=book.booklisturl+'/edit' title="Edit Book Entry")
                    svg.bi.bi-pencil(viewBox='0 0 16 16', fill='currentColor', xmlns='http://www.w3.org/2000/svg')
                      path(fill-rule='evenodd', d='M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z')
                      path(fill-rule='evenodd', d='M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z')
                  a(href=book.booklisturl+'/remove' title="Delete Book Entry")
                    svg.bi.bi-x-circle-fill.text-danger(viewBox='0 0 16 16', fill='currentColor', xmlns='http://www.w3.org/2000/svg')
                      path(fill-rule='evenodd', d='M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708L8 7.293 4.854 4.146a.5.5 0 1 0-.708.708L7.293 8l-3.147 3.146a.5.5 0 0 0 .708.708L8 8.707l3.146 3.147a.5.5 0 0 0 .708-.708L8.707 8l3.147-3.146z')
              - else 
                return  
          a.btn.btn-dark(href=book.url+'/update') Update Book
          | 
          a.btn.btn-danger(href=book.url+'/delete') Delete Book
          | 
          a.btn.btn-secondary(href='/catalog/books') Back to Catalog

  script.

    document.getElementById("expandText").addEventListener("click", function(e){
      e.preventDefault();

      let shortText = document.getElementById("shortText");
      let fullText = document.getElementById("fullText");

      if (shortText.style.display === "inline") {
        shortText.style.display = "none";
        fullText.style.display = "inline";
        document.getElementById("expandText").innerText = "...less";
      } else {
        shortText.style.display = "inline";
        fullText.style.display = "none";
        document.getElementById("expandText").innerText = "...more";
      }

    })